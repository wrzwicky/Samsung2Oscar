## Samsung Health docs for OxygenSaturation:
## https://developer.samsung.com/health/android/data/api-reference/com/samsung/android/sdk/healthdata/HealthConstants.OxygenSaturation.html

# doesn't give all samples, just start_time, end_time, min, max;
# and I assume 'spo2' column is the average.
# also has .low_duration for the time range
# .binning points to json files; may have more data

#TODO
# -flot() returning None causes crash <- fix this! we should not keep records with bad data
# -Oscar apparently ignores date/time, and assumes one sample per second.
# -Also, spo2 file only allows one time stamp, so can't import all data

import csv
import struct
from pprint import pprint
from samsung_health import *
 

def writeOxygenSaturation(filename, oxygens):
  with open(filename, 'w', newline='') as csvfile:
    spamwriter = csv.writer(csvfile)
    spamwriter.writerow([
      'start_time', 'end_time',
      "spo2_min", "spo2_max", "spo2",
      "heart_rate"])

    for oxy in oxygens:
      spamwriter.writerow([
        formatSamsungTime(oxy.start), formatSamsungTime(oxy.end),
        oxy.min, oxy.max, oxy.avg,
        oxy.heart
      ])


def writeSpo2(filename, oxygens):
  head1 = bytes("Generated by Samsung2Oscar", 'utf-8')
  cruftpos = struct.pack("<H", 2+len(head1))
  cruft = bytes(200)
  head2 = struct.pack(
    "<IIIIIII",
    oxygens[0].start.month, oxygens[0].start.day, oxygens[0].start.year,
    oxygens[0].start.hour, oxygens[0].start.minute, oxygens[0].start.second,
    len(oxygens))
  
  samples = bytes()
  for oxy in oxygens:
    samples += struct.pack("<BB", int(oxy.avg), int(oxy.heart if oxy.heart else 0))

  content = cruftpos + head1 + cruft + head2 + samples

  with open(filename, 'bw') as newFile:
    newFile.write(content)

loader = OxygenSaturationParser()
oxygen = loader.load('samsunghealth_wrzwicky_20230602155515/com.samsung.shealth.tracker.oxygen_saturation.20230602155515.csv')
print(f"{len(oxygen)} records")
print(oxygen[0])
#print([o.avg for o in oxygen])

writeOxygenSaturation("extracted.csv", oxygen)
writeSpo2("bill.spo2", oxygen)
